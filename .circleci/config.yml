version: 2.1

jobs:
  test:
    docker:
      - image: node:12.18-alpine
    steps:
      - run:
          name: Install Git
          command: apk add --update git
      - checkout
      - restore_cache:
          name: Restore build cache
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run:
          name: Install yarn dependencies
          command: yarn
      - save_cache:
          name: Save build cache
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          name: Run tests with coverage
          command: yarn coverage
      - run:
          name: Run code lint
          command: yarn lint

  build-push-container:
    machine: true
    steps:
      - checkout
      - run:
          name: Log in to Docker Hub
          command: echo "$DOCKER_PASS" | docker login --username $DOCKER_USER --password-stdin
      - run:
          name: Build with Docker Compose and production settings
          command: docker-compose -f docker-compose.yml -f docker-compose.prod.yml build
      - run:
          name: Push to remote Docker hub
          command: docker-compose push

  deploy:
    docker:
      - image: cimg/base:2020.01
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "69:f4:84:f0:e9:82:8a:88:4e:f2:94:a2:25:80:f1:cb"
      - run:
          name: Add key to known_hosts
          command: mkdir -p ~/ssh && ssh-keyscan $DEPLOY_HOST >> ~/.ssh/known_hosts
      - run:
          name: Copy over Docker / Compose files to remote server
          command: scp -r docker-compose.yml docker-compose.prod.yml .docker/ $DEPLOY_USER@$DEPLOY_HOST:~/
      - run:
          name: Remotely pull docker images, refresh, then restart the container
          command: |
            ssh -t $DEPLOY_USER@$DEPLOY_HOST "
              docker pull matfin/cinematt-build:latest &&
              docker pull matfin/cinematt-serve:latest &&
              docker stop build serve &&
              docker rm build serve &&
              docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
            "

workflows:
  version: 2
  build_and_test:
    jobs:
      - test:
          filters:
            branches:
              ignore: main
      - build-push-container:
          filters:
            branches:
              only: main
      - deploy:
          requires:
            - build-push-container
          filters:
            branches:
              only: main
